# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Tracker API
    version: v1alpha1
servers:
    - url: https://tracker.animeapis.com
paths:
    /v1alpha1/users/{user}/trackers:
        get:
            tags:
                - TrackerService
            description: 'TODO: add documentation about supported filters.'
            operationId: TrackerService_ListTrackers
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: If unspecified, server will pick an appropriate default.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: The value returned from the previous call.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter to be applied to results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.tracker.v1alpha1.ListTrackersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - TrackerService
            operationId: TrackerService_CreateTracker
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.tracker.v1alpha1.CreateTrackerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/trackers/{tracker}:
        get:
            tags:
                - TrackerService
            description: |-
                Get a tracker by its unique identifier.

                 To fetch a tracker by the resource, use `ListTrackers` instead with an
                 appropriate filter. Example: `filter = "resource:animes/1245678"`.
            operationId: TrackerService_GetTracker
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: tracker
                  in: path
                  description: The tracker id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - TrackerService
            operationId: TrackerService_DeleteTracker
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: tracker
                  in: path
                  description: The tracker id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - TrackerService
            operationId: TrackerService_UpdateTracker
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: tracker
                  in: path
                  description: The tracker id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.tracker.v1alpha1.UpdateTrackerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/trackers/{tracker}/activities:
        post:
            tags:
                - TrackerService
            operationId: TrackerService_CreateActivity
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: tracker
                  in: path
                  description: The tracker id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.tracker.v1alpha1.CreateActivityRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Activity'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/trackers/{tracker}/activities/{activity}:
        delete:
            tags:
                - TrackerService
            operationId: TrackerService_DeleteActivity
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: tracker
                  in: path
                  description: The tracker id.
                  required: true
                  schema:
                    type: string
                - name: activity
                  in: path
                  description: The activity id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/trackers:export:
        post:
            tags:
                - TrackerService
            operationId: TrackerService_ExportTrackers
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.tracker.v1alpha1.ExportTrackersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/trackers:import:
        post:
            tags:
                - TrackerService
            operationId: TrackerService_ImportTrackers
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.tracker.v1alpha1.ImportTrackersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        animeshon.tracker.v1alpha1.Activity:
            required:
                - name
                - resource
            type: object
            properties:
                name:
                    type: string
                    description: The id of the activity.
                resource:
                    type: string
                    description: The content whose progress is being tracked.
                platform:
                    type: string
                    description: The platform that the user used to consume the resource.
                from:
                    type: integer
                    description: Where the activity started within the resource. This value represents the time in seconds within an episode or the page number within a graphic novel or light novel chapter.
                    format: int32
                to:
                    type: integer
                    description: Where the activity ended within the resource. This value represents the time in seconds within an episode or the page number within a graphic novel or light novel chapter.
                    format: int32
                startTime:
                    type: string
                    description: When this activity started.
                    format: date-time
                endTime:
                    type: string
                    description: When this activity ended.
                    format: date-time
            description: Activities track the progress of a user related to readable or watchable resources such as light novel and graphic novel chapters, and anime episodes. Activities are immutable and store meta information such as when the activity started, when it ended, from where the progress started and where it stopped. An example of activities might be a user watching on Netflix the Episode N of the Anime XYZ from minute 5:47 to minute 15:32 on the 7th of July at 8:35 PM. In this specific case a Chrome extension might automatically create a new activity every minute until the user pauses the video or closes the tab. The information collected allows the service to let the user know when was the last "checkpoint" recorded, enabling the user to resume the episode at the correct time on a different platform (i.e. continue from where I left). Additionally, the information collected is useful to generate histograms and to idenitify popular scenes within an episode (we all know Pornhub has an identical feature already). There is no limit to the number of activities a user might generate and some activities are automatically registered from Animeshon itself, for example when a user is reading a graph novel directly on our platform. Activities can also be repeated multiple times for the same range (e.g. if a user rewatches the same scene in an episode 5 times). Whenever an activity is created that marks the end of a resource, its parent tracker is updated to include it in the list of completed resource.
        animeshon.tracker.v1alpha1.CreateActivityRequest:
            required:
                - parent
                - activity
            type: object
            properties:
                parent:
                    type: string
                    description: The parent this tracker belongs to.
                activity:
                    $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Activity'
        animeshon.tracker.v1alpha1.CreateTrackerRequest:
            required:
                - parent
                - tracker
            type: object
            properties:
                parent:
                    type: string
                    description: The parent this tracker belongs to.
                tracker:
                    $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
        animeshon.tracker.v1alpha1.ExportTrackersRequest:
            required:
                - parent
            type: object
            properties:
                parent:
                    type: string
                provider:
                    enum:
                        - PROVIDER_UNSPECIFIED
                        - MYANIMELIST
                        - MANGADEX
                        - ANILIST
                        - ANIDB
                        - MANGAUPDATES
                        - VNDB
                    type: string
                    format: enum
            description: Selecting what provider we want to export to
        animeshon.tracker.v1alpha1.ImportTrackersRequest:
            required:
                - parent
            type: object
            properties:
                parent:
                    type: string
                provider:
                    enum:
                        - PROVIDER_UNSPECIFIED
                        - MYANIMELIST
                        - MANGADEX
                        - ANILIST
                        - ANIDB
                        - MANGAUPDATES
                        - VNDB
                    type: string
                    format: enum
            description: Selecting what provider we want to import from
        animeshon.tracker.v1alpha1.ListTrackersResponse:
            type: object
            properties:
                trackers:
                    type: array
                    items:
                        $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
                    description: The list of trackers.
                nextPageToken:
                    type: string
                    description: A token to retrieve next page of results.
        animeshon.tracker.v1alpha1.Tracker:
            required:
                - name
                - resource
            type: object
            properties:
                name:
                    type: string
                    description: The id of the tracker.
                resource:
                    type: string
                    description: The content whose progress is being tracked.
                startTime:
                    type: string
                    description: When the progress started.
                    format: date-time
                endTime:
                    type: string
                    description: When the progress ended.
                    format: date-time
                completedResources:
                    type: array
                    items:
                        type: string
                    description: The list of completed sub-resources (e.g episodes or chapters).
                progressPercentage:
                    $ref: '#/components/schemas/google.protobuf.FloatValue'
                state:
                    enum:
                        - STATE_UNSPECIFIED
                        - IN_PROGRESS
                        - COMPLETED
                        - ON_HOLD
                    type: string
                    description: The progress state of the tracker.
                    format: enum
            description: A tracker tracks the progress of one or more users related to releasable resources such as animes, graphic novels, light novels, and visual novels. It is important to notice that users cannot `watch` an anime from a technical perspective but rather they can watch one of its releases such as its pysical DVD copy or its broadcast on Funimation. Nevertheless, for a better user experience a releasable content is considered completed whenever a user watched, played, or read all of its "regular" episodes, chapters, or releases. This means that "recaps" and "specials" are ultimately ignored. Animes and novels are easier to track as they have a countable and defined amount of resources that can be consumed (episodes and chapters). Their progress is therefore automatically updated whenever a new user activity is generated. Visual novels and video games in general do not always have a clear progress and therefore must be updated manually by the user. A tracker accounts only for the overall progress on a releasable content, this means that it won't provide any information about rewatches. Additionally, trackers can be shared among multiple users thorough audiences, this is useful whenever a user is, for example, watching an anime together with a group of friends and wants to keep track of the progress separately from his/her own personal progress or from the progress on the same resource with another group of friends (i.e. audience). The progress of audience trackers affects the personal progress, that is whenever new resources are consumed by an audience the personal tracker of each member belonging to that audience will be updated automatically as well. This behavior makes sense as a group of people  watching the Episode N of the Anime XYZ also means that each member of the group also watched the episode and therefore their collective personal progress changed.
        animeshon.tracker.v1alpha1.UpdateTrackerRequest:
            required:
                - tracker
            type: object
            properties:
                tracker:
                    $ref: '#/components/schemas/animeshon.tracker.v1alpha1.Tracker'
                updateMask:
                    type: string
                    description: The field mask to determine which fields are to be updated. If empty, the server will assume all fields are to be updated.
                    format: field-mask
        google.longrunning.Operation:
            type: object
            properties:
                name:
                    type: string
                    description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
                metadata:
                    $ref: '#/components/schemas/google.protobuf.Any'
                done:
                    type: boolean
                    description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
                error:
                    $ref: '#/components/schemas/google.rpc.Status'
                response:
                    $ref: '#/components/schemas/google.protobuf.Any'
            description: This resource represents a long-running operation that is the result of a network API call.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.protobuf.FloatValue:
            type: object
            properties:
                value:
                    type: number
                    description: The float value.
                    format: float
            description: Wrapper message for `float`. The JSON representation for `FloatValue` is JSON number.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    securitySchemes:
        OAuth2:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://accounts.animeshon.com/o/oauth2/token
                    scopes: {}
                authorizationCode:
                    authorizationUrl: https://accounts.animeshon.com/o/oauth2/auth
                    tokenUrl: https://accounts.animeshon.com/o/oauth2/token
                    scopes:
                        https://www.animeapis.com/auth/tracker: View and manage your trackers and activities.
tags:
    - name: TrackerService
