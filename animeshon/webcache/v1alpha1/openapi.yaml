# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: animeshon.webcache
    version: v1alpha1
servers:
    - url: https://webcache.animeapis.com
paths:
    /v1alpha1/caches:
        get:
            tags:
                - WebCache
            operationId: WebCache_ListCaches
            parameters:
                - name: pageSize
                  in: query
                  description: If unspecified, server will pick an appropriate default.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: The value returned from the previous call.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: 'A filter to be applied to results. Currently accepted filters include: - uri:{absolute uri} - resource:{full resource name}'
                  schema:
                    type: string
                - name: onlyLatestRevision
                  in: query
                  description: Whether to return only the latest revision for each cache.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.webcache.v1alpha1.ListCachesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - WebCache
            operationId: WebCache_CreateCache
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.webcache.v1alpha1.CreateCacheRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.webcache.v1alpha1.Cache'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/caches/{cache}:
        get:
            tags:
                - WebCache
            description: See https://google.aip.dev/162#referencing-revisions for more information.
            operationId: WebCache_GetCache
            parameters:
                - name: cache
                  in: path
                  description: The cache id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.webcache.v1alpha1.Cache'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - WebCache
            operationId: WebCache_DeleteCache
            parameters:
                - name: cache
                  in: path
                  description: The cache id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        animeshon.webcache.v1alpha1.Cache:
            required:
                - name
                - scheme
                - uri
            type: object
            properties:
                name:
                    type: string
                    description: The name of the cache, idempotently generated from the scheme and uri.
                scheme:
                    type: string
                    description: The original scheme indicating the protocol used for the original request.
                uri:
                    type: string
                    description: The request uri stripped of the original scheme.
                mimeType:
                    type: string
                    description: The response content type indicating the original media type.
                statusCode:
                    type: integer
                    description: The response code indicating the status of the remote response.
                    format: int32
                redirectUri:
                    type: string
                    description: The absolute redirect uri indicating any permanent or temporary redirect.
                resource:
                    type: string
                    description: The full resource name of the cached resource.
                revisionId:
                    readOnly: true
                    type: string
                    description: The randomly generated revision identifier of this cache. The format is an 8-character hexadecimal string.
                revisionCreateTime:
                    readOnly: true
                    type: string
                    description: The creation time indicating when this revision was created.
                    format: date-time
                revisionExpireTime:
                    readOnly: true
                    type: string
                    description: The expiration time indicating when this revision should no longer be considered valid.
                    format: date-time
            description: Cache contains meta information about a specific web resource.
        animeshon.webcache.v1alpha1.CreateCacheRequest:
            required:
                - cache
            type: object
            properties:
                cache:
                    $ref: '#/components/schemas/animeshon.webcache.v1alpha1.Cache'
                ttl:
                    $ref: '#/components/schemas/google.protobuf.Duration'
        animeshon.webcache.v1alpha1.ListCachesResponse:
            type: object
            properties:
                caches:
                    type: array
                    items:
                        $ref: '#/components/schemas/animeshon.webcache.v1alpha1.Cache'
                    description: The list of caches.
                nextPageToken:
                    type: string
                    description: A token to retrieve next page of results.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.protobuf.Duration:
            type: object
            properties:
                seconds:
                    type: integer
                    description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
                    format: int64
                nanos:
                    type: integer
                    description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
                    format: int32
            description: 'A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years. # Examples Example 1: Compute Duration from two Timestamps in pseudo code.     Timestamp start = ...;     Timestamp end = ...;     Duration duration = ...;     duration.seconds = end.seconds - start.seconds;     duration.nanos = end.nanos - start.nanos;     if (duration.seconds < 0 && duration.nanos > 0) {       duration.seconds += 1;       duration.nanos -= 1000000000;     } else if (duration.seconds > 0 && duration.nanos < 0) {       duration.seconds -= 1;       duration.nanos += 1000000000;     } Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.     Timestamp start = ...;     Duration duration = ...;     Timestamp end = ...;     end.seconds = start.seconds + duration.seconds;     end.nanos = start.nanos + duration.nanos;     if (end.nanos < 0) {       end.seconds -= 1;       end.nanos += 1000000000;     } else if (end.nanos >= 1000000000) {       end.seconds += 1;       end.nanos -= 1000000000;     } Example 3: Compute Duration from datetime.timedelta in Python.     td = datetime.timedelta(days=3, minutes=10)     duration = Duration()     duration.FromTimedelta(td) # JSON Mapping In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds. For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s", and 3 seconds and 1 microsecond should be expressed in JSON format as "3.000001s".'
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
tags:
    - name: WebCache
