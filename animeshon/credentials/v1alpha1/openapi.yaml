# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Credentials API
    version: v1alpha1
servers:
    - url: https://credentials.animeapis.com
paths:
    /v1alpha1/users/{user}/credentials:
        get:
            tags:
                - Keeper
            operationId: Keeper_ListCredentials
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: If unspecified, server will pick an appropriate default.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: The value returned from the previous call.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter to be applied to results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ListCredentialsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/credentials/{credential}:
        get:
            tags:
                - Keeper
            operationId: Keeper_GetCredentials
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: credential
                  in: path
                  description: The credential id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.Credentials'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Keeper
            operationId: Keeper_CreateCredentials
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: credential
                  in: path
                  description: The credential id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.credentials.v1alpha1.CreateCredentialsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.Credentials'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Keeper
            operationId: Keeper_DeleteCredentials
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: credential
                  in: path
                  description: The credential id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/credentials/{credential}:actAs:
        post:
            tags:
                - Keeper
            operationId: Keeper_ActAsCredentials
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: credential
                  in: path
                  description: The credential id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ActAsCredentialsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ActAsCredentialsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/flows/{flow}:exchange:
        post:
            tags:
                - OAuth2
            operationId: OAuth2_Exchange
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: flow
                  in: path
                  description: The flow id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ExchangeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ExchangeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}/flows/{flow}:signin:
        post:
            tags:
                - OAuth2
            operationId: OAuth2_SignIn
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: flow
                  in: path
                  description: The flow id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.credentials.v1alpha1.SignInRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.credentials.v1alpha1.SignInResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        animeshon.credentials.v1alpha1.ActAsCredentialsRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resorce name of the credentials.
        animeshon.credentials.v1alpha1.ActAsCredentialsResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: The access token to be attached in the request headers. Only returned for OAuth 2.0 credentials.
                basic:
                    $ref: '#/components/schemas/animeshon.credentials.v1alpha1.ActAsCredentialsResponse_Basic'
        animeshon.credentials.v1alpha1.ActAsCredentialsResponse_Basic:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        animeshon.credentials.v1alpha1.CreateCredentialsRequest:
            required:
                - credentials
            type: object
            properties:
                credentials:
                    $ref: '#/components/schemas/animeshon.credentials.v1alpha1.Credentials'
                basic:
                    $ref: '#/components/schemas/animeshon.credentials.v1alpha1.CreateCredentialsRequest_Basic'
                oauth2:
                    $ref: '#/components/schemas/animeshon.credentials.v1alpha1.CreateCredentialsRequest_OAuth2'
        animeshon.credentials.v1alpha1.CreateCredentialsRequest_Basic:
            required:
                - username
                - password
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        animeshon.credentials.v1alpha1.CreateCredentialsRequest_OAuth2:
            required:
                - refreshToken
            type: object
            properties:
                principal:
                    type: string
                refreshToken:
                    type: string
        animeshon.credentials.v1alpha1.Credentials:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resorce name of the credentials.
                uid:
                    readOnly: true
                    type: string
                    description: The unique and immutable identifier of the credentials.
                principal:
                    type: string
                    description: The principal of the credentialscode, usually the username.
                active:
                    $ref: '#/components/schemas/google.protobuf.BoolValue'
                authenticationMethod:
                    readOnly: true
                    enum:
                        - AUTHENTICATION_METHOD_UNSPECIFIED
                        - BASIC
                        - OAUTH2
                    type: string
                    description: Which authentication method is used by the credentials.
                    format: enum
                lastActivityTime:
                    readOnly: true
                    type: string
                    description: When the credentials were last used.
                    format: date-time
            description: Credentials are persistent authentication
        animeshon.credentials.v1alpha1.ExchangeRequest:
            required:
                - name
                - code
                - state
            type: object
            properties:
                name:
                    type: string
                    description: The resorce name of the flow.
                code:
                    type: string
                    description: The OAuth 2.0 code returned from the authentication flow.
                state:
                    type: string
                    description: The OAuth 2.0 state returned from the authentication flow.
        animeshon.credentials.v1alpha1.ExchangeResponse:
            type: object
            properties:
                credentials:
                    $ref: '#/components/schemas/animeshon.credentials.v1alpha1.Credentials'
        animeshon.credentials.v1alpha1.ListCredentialsResponse:
            type: object
            properties:
                credentials:
                    type: array
                    items:
                        $ref: '#/components/schemas/animeshon.credentials.v1alpha1.Credentials'
                    description: The list of credentials.
                nextPageToken:
                    type: string
                    description: A token to retrieve next page of results.
        animeshon.credentials.v1alpha1.SignInRequest:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resorce name of the flow.
        animeshon.credentials.v1alpha1.SignInResponse:
            type: object
            properties:
                authorizationUrl:
                    type: string
                    description: The authorization url that the user should be redirect to for web sign-in.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.protobuf.BoolValue:
            type: object
            properties:
                value:
                    type: boolean
                    description: The bool value.
            description: Wrapper message for `bool`. The JSON representation for `BoolValue` is JSON `true` and `false`.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    securitySchemes:
        OAuth2:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://accounts.animeshon.com/o/oauth2/token
                    scopes: {}
                authorizationCode:
                    authorizationUrl: https://accounts.animeshon.com/o/oauth2/auth
                    tokenUrl: https://accounts.animeshon.com/o/oauth2/token
                    scopes:
                        https://www.animeapis.com/auth/credentials: View and manage credentials.
tags:
    - name: Keeper
    - name: OAuth2
