# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: animeshon.grbac
    description: AccessControl is the internal service used by Animeshon to enforce RBAC rules.
    version: v1alpha1
paths:
    /v1alpha1/groups/{group}:
        get:
            tags:
                - AccessControl
            description: GetGroup returns a group.
            operationId: AccessControl_GetGroup
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - AccessControl
            description: CreateGroup creates a new group.
            operationId: AccessControl_CreateGroup
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.CreateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - AccessControl
            description: DeleteGroup deletes a group.
            operationId: AccessControl_DeleteGroup
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - AccessControl
            description: UpdateGroup updates a group with a field mask.
            operationId: AccessControl_UpdateGroup
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.UpdateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/groups/{group}:addMember:
        patch:
            tags:
                - AccessControl
            description: AddGroupMember adds a member to a group.
            operationId: AccessControl_AddGroupMember
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.AddGroupMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/groups/{group}:removeMember:
        patch:
            tags:
                - AccessControl
            description: RemoveGroupMember removes a member from a group.
            operationId: AccessControl_RemoveGroupMember
            parameters:
                - name: group
                  in: path
                  description: The group id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.RemoveGroupMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/iam:getIamPolicy:
        post:
            tags:
                - AccessControl
            description: |-
                Gets the IAM policy that is attached to a generic resource.
                 Note: the full resource name that identifies the resource must be provided.
            operationId: AccessControl_GetIamPolicy
            parameters:
                - name: resource
                  in: query
                  description: 'REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.'
                  schema:
                    type: string
                - name: options.requestedPolicyVersion
                  in: query
                  description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.iam.v1.Policy'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/iam:setIamPolicy:
        post:
            tags:
                - AccessControl
            description: |-
                Sets the IAM policy that is attached to a generic resource.
                 Note: the full resource name that identifies the resource must be provided.
            operationId: AccessControl_SetIamPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/google.iam.v1.SetIamPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.iam.v1.Policy'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/iam:testIamPolicy:
        post:
            tags:
                - AccessControl
            description: |-
                Checks whether a member has a specific permission for a specific resource.
                 If not allowed an Unauthorized (403) error will be returned.
            operationId: AccessControl_TestIamPolicy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.TestIamPolicyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/permissions/{permission}:
        post:
            tags:
                - AccessControl
            description: CreatePermission creates a new permission.
            operationId: AccessControl_CreatePermission
            parameters:
                - name: permission
                  in: path
                  description: The permission id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.CreatePermissionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Permission'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - AccessControl
            description: DeletePermission deletes a permission.
            operationId: AccessControl_DeletePermission
            parameters:
                - name: permission
                  in: path
                  description: The permission id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/resources/**:
        get:
            tags:
                - AccessControl
            description: GetResource returns a resource.
            operationId: AccessControl_GetResource
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Resource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - AccessControl
            description: CreateResource creates a new resource.
            operationId: AccessControl_CreateResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.CreateResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Resource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - AccessControl
            description: DeleteResource deletes a resource.
            operationId: AccessControl_DeleteResource
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/resources/**:transfer:
        post:
            tags:
                - AccessControl
            description: TransferResource transfers a resource to a new parent.
            operationId: AccessControl_TransferResource
            parameters:
                - name: targetParent
                  in: query
                  description: The full resource name that identifies the new parent resource.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Resource'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/roles/{role}:
        get:
            tags:
                - AccessControl
            description: GetRole returns a role.
            operationId: AccessControl_GetRole
            parameters:
                - name: role
                  in: path
                  description: The role id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Role'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - AccessControl
            description: CreateRole creates a new role.
            operationId: AccessControl_CreateRole
            parameters:
                - name: role
                  in: path
                  description: The role id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Role'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - AccessControl
            description: DeleteRole deletes a role.
            operationId: AccessControl_DeleteRole
            parameters:
                - name: role
                  in: path
                  description: The role id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - AccessControl
            description: UpdateRole updates a role with a field mask.
            operationId: AccessControl_UpdateRole
            parameters:
                - name: role
                  in: path
                  description: The role id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Role'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha1/users/{user}:
        post:
            tags:
                - AccessControl
            description: CreateSubject creates a new subject.
            operationId: AccessControl_CreateSubject
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/animeshon.grbac.v1alpha1.CreateSubjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Subject'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - AccessControl
            description: DeleteSubject deletes a subject.
            operationId: AccessControl_DeleteSubject
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        animeshon.grbac.v1alpha1.AccessTuple:
            required:
                - principal
                - fullResourceName
                - permission
            type: object
            properties:
                principal:
                    type: string
                    description: The member, or principal, whose access you want to check.
                fullResourceName:
                    type: string
                    description: The full resource name that identifies the resource.
                permission:
                    type: string
                    description: The IAM permission to check for the specified member and resource.
            description: Information about the member, resource, and permission to check.
        animeshon.grbac.v1alpha1.AddGroupMemberRequest:
            required:
                - group
                - member
            type: object
            properties:
                group:
                    type: string
                    description: The name of the group to add a member to.
                member:
                    type: string
                    description: The member to be added.
        animeshon.grbac.v1alpha1.CreateGroupRequest:
            required:
                - group
            type: object
            properties:
                group:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
        animeshon.grbac.v1alpha1.CreatePermissionRequest:
            required:
                - permission
            type: object
            properties:
                permission:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Permission'
        animeshon.grbac.v1alpha1.CreateResourceRequest:
            required:
                - resource
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Resource'
        animeshon.grbac.v1alpha1.CreateRoleRequest:
            required:
                - role
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Role'
        animeshon.grbac.v1alpha1.CreateSubjectRequest:
            required:
                - subject
            type: object
            properties:
                subject:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Subject'
        animeshon.grbac.v1alpha1.Group:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resource name of the group.
                members:
                    type: array
                    items:
                        type: string
                    description: The list of members of the group. Groups might include other groups.
                etag:
                    type: string
                    description: An etag for concurrency control, ignored during creation.
                    format: bytes
        animeshon.grbac.v1alpha1.Permission:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resource name of the permission.
        animeshon.grbac.v1alpha1.RemoveGroupMemberRequest:
            required:
                - group
                - member
            type: object
            properties:
                group:
                    type: string
                    description: The name of the group to remove an member from.
                member:
                    type: string
                    description: The member to be removed.
        animeshon.grbac.v1alpha1.Resource:
            required:
                - name
                - parent
            type: object
            properties:
                name:
                    type: string
                    description: The full resource name that identifies the resource.
                parent:
                    type: string
                    description: The full resource name that identifies the parent resource.
                etag:
                    type: string
                    description: An etag for concurrency control, ignored during creation.
                    format: bytes
        animeshon.grbac.v1alpha1.Role:
            required:
                - name
                - permissions
            type: object
            properties:
                name:
                    type: string
                    description: The resource name of the role.
                permissions:
                    type: array
                    items:
                        type: string
                    description: The list of permissions granted by the role.
                etag:
                    type: string
                    description: An etag for concurrency control, ignored during creation.
                    format: bytes
        animeshon.grbac.v1alpha1.Subject:
            required:
                - name
            type: object
            properties:
                name:
                    type: string
                    description: The resource name of the subject.
        animeshon.grbac.v1alpha1.TestIamPolicyRequest:
            required:
                - accessTuple
            type: object
            properties:
                accessTuple:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.AccessTuple'
        animeshon.grbac.v1alpha1.UpdateGroupRequest:
            required:
                - group
            type: object
            properties:
                group:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Group'
                updateMask:
                    type: string
                    description: The field mask to determine which fields are to be updated. If empty, the server will assume all fields are to be updated.
                    format: field-mask
        animeshon.grbac.v1alpha1.UpdateRoleRequest:
            required:
                - role
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/animeshon.grbac.v1alpha1.Role'
                updateMask:
                    type: string
                    description: The field mask to determine which fields are to be updated. If empty, the server will assume all fields are to be updated.
                    format: field-mask
        google.iam.v1.AuditConfig:
            type: object
            properties:
                service:
                    type: string
                    description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
                auditLogConfigs:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.iam.v1.AuditLogConfig'
                    description: The configuration for logging of each type of permission.
            description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs:     {       "audit_configs": [         {           "service": "allServices",           "audit_log_configs": [             {               "log_type": "DATA_READ",               "exempted_members": [                 "user:jose@example.com"               ]             },             {               "log_type": "DATA_WRITE"             },             {               "log_type": "ADMIN_READ"             }           ]         },         {           "service": "sampleservice.googleapis.com",           "audit_log_configs": [             {               "log_type": "DATA_READ"             },             {               "log_type": "DATA_WRITE",               "exempted_members": [                 "user:aliya@example.com"               ]             }           ]         }       ]     } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.'
        google.iam.v1.AuditLogConfig:
            type: object
            properties:
                logType:
                    enum:
                        - LOG_TYPE_UNSPECIFIED
                        - ADMIN_READ
                        - DATA_WRITE
                        - DATA_READ
                    type: string
                    description: The log type that this config enables.
                    format: enum
                exemptedMembers:
                    type: array
                    items:
                        type: string
                    description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of [Binding.members][google.iam.v1.Binding.members].
            description: 'Provides the configuration for logging a type of permissions. Example:     {       "audit_log_configs": [         {           "log_type": "DATA_READ",           "exempted_members": [             "user:jose@example.com"           ]         },         {           "log_type": "DATA_WRITE"         }       ]     } This enables ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com from DATA_READ logging.'
        google.iam.v1.Binding:
            type: object
            properties:
                role:
                    type: string
                    description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
                members:
                    type: array
                    items:
                        type: string
                    description: 'Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is    on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone    who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google    account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service    account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group.    For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a user that has been recently deleted. For    example, `alice@example.com?uid=123456789012345678901`. If the user is    recovered, this value reverts to `user:{emailid}` and the recovered user    retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus    unique identifier) representing a service account that has been recently    deleted. For example,    `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.    If the service account is undeleted, this value reverts to    `serviceAccount:{emailid}` and the undeleted service account retains the    role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a Google group that has been recently    deleted. For example, `admins@example.com?uid=123456789012345678901`. If    the group is recovered, this value reverts to `group:{emailid}` and the    recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.'
                condition:
                    $ref: '#/components/schemas/google.type.Expr'
            description: Associates `members`, or principals, with a `role`.
        google.iam.v1.Policy:
            type: object
            properties:
                version:
                    type: integer
                    description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy   that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
                    format: int32
                bindings:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.iam.v1.Binding'
                    description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
                auditConfigs:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.iam.v1.AuditConfig'
                    description: Specifies cloud audit logging configuration for this policy.
                etag:
                    type: string
                    description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
                    format: bytes
            description: 'An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:**     {       "bindings": [         {           "role": "roles/resourcemanager.organizationAdmin",           "members": [             "user:mike@example.com",             "group:admins@example.com",             "domain:google.com",             "serviceAccount:my-project-id@appspot.gserviceaccount.com"           ]         },         {           "role": "roles/resourcemanager.organizationViewer",           "members": [             "user:eve@example.com"           ],           "condition": {             "title": "expirable access",             "description": "Does not grant access after Sep 2020",             "expression": "request.time < timestamp(''2020-10-01T00:00:00.000Z'')",           }         }       ],       "etag": "BwWWja0YfJA=",       "version": 3     } **YAML example:**     bindings:     - members:       - user:mike@example.com       - group:admins@example.com       - domain:google.com       - serviceAccount:my-project-id@appspot.gserviceaccount.com       role: roles/resourcemanager.organizationAdmin     - members:       - user:eve@example.com       role: roles/resourcemanager.organizationViewer       condition:         title: expirable access         description: Does not grant access after Sep 2020         expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'')     etag: BwWWja0YfJA=     version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).'
        google.iam.v1.SetIamPolicyRequest:
            required:
                - resource
                - policy
            type: object
            properties:
                resource:
                    type: string
                    description: 'REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.'
                policy:
                    $ref: '#/components/schemas/google.iam.v1.Policy'
                updateMask:
                    type: string
                    description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
                    format: field-mask
            description: Request message for `SetIamPolicy` method.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        google.type.Expr:
            type: object
            properties:
                expression:
                    type: string
                    description: Textual representation of an expression in Common Expression Language syntax.
                title:
                    type: string
                    description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
                description:
                    type: string
                    description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
                location:
                    type: string
                    description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
            description: 'Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):     title: "Summary size limit"     description: "Determines if a summary is less than 100 chars"     expression: "document.summary.size() < 100" Example (Equality):     title: "Requestor is owner"     description: "Determines if requestor is the document owner"     expression: "document.owner == request.auth.claims.email" Example (Logic):     title: "Public documents"     description: "Determine whether the document should be publicly visible"     expression: "document.type != ''private'' && document.type != ''internal''" Example (Data Manipulation):     title: "Notification string"     description: "Create a notification string with a timestamp."     expression: "''New message received at '' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.'
tags:
    - name: AccessControl
